{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:05.930781Z\",\"iopub.execute_input\":\"2023-04-15T16:39:05.931821Z\",\"iopub.status.idle\":\"2023-04-15T16:39:05.942027Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:05.931784Z\",\"shell.execute_reply\":\"2023-04-15T16:39:05.940907Z\"}}\n#Importing Modules\nimport pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nfrom tqdm.notebook import tqdm\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\nimport tensorflow as tf\n#from keras.preprocessing.image import load_img\nfrom keras.models import Sequential, Model\nfrom keras.layers import Dense, Conv2D, Dropout, Flatten, MaxPooling2D, Input\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:08.703664Z\",\"iopub.execute_input\":\"2023-04-15T16:39:08.706149Z\",\"iopub.status.idle\":\"2023-04-15T16:39:08.710580Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:08.706094Z\",\"shell.execute_reply\":\"2023-04-15T16:39:08.709362Z\"}}\n#load the dataset\nBASE_DIR = '../input/genderagedata/agegenderdata/'\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:20.624511Z\",\"iopub.execute_input\":\"2023-04-15T16:39:20.625226Z\",\"iopub.status.idle\":\"2023-04-15T16:39:20.826322Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:20.625181Z\",\"shell.execute_reply\":\"2023-04-15T16:39:20.825333Z\"}}\n#Labels - age,gender,ethnicity\nimage_paths = []\nage_labels = []\ngender_labels = []\n\nfor filename in tqdm(os.listdir(BASE_DIR)):\n    image_path = os.path.join(BASE_DIR,filename)\n    temp = filename.split('_')\n    age = int(temp[0])\n    gender = int(temp[1])\n    image_paths.append(image_path)\n    age_labels.append(age)\n    gender_labels.append(gender)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:23.910356Z\",\"iopub.execute_input\":\"2023-04-15T16:39:23.911294Z\",\"iopub.status.idle\":\"2023-04-15T16:39:23.938802Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:23.911241Z\",\"shell.execute_reply\":\"2023-04-15T16:39:23.937706Z\"}}\ndf = pd.DataFrame()\ndf['image'], df['age'], df['gender'] = image_paths, age_labels, gender_labels\ndf.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:25.008792Z\",\"iopub.execute_input\":\"2023-04-15T16:39:25.009860Z\",\"iopub.status.idle\":\"2023-04-15T16:39:25.015627Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:25.009781Z\",\"shell.execute_reply\":\"2023-04-15T16:39:25.014053Z\"}}\n#mapping of labels for gender\ngender_dict = {0:'Male', 1:'Female'}\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:26.638643Z\",\"iopub.execute_input\":\"2023-04-15T16:39:26.639375Z\",\"iopub.status.idle\":\"2023-04-15T16:39:26.993744Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:26.639336Z\",\"shell.execute_reply\":\"2023-04-15T16:39:26.992841Z\"}}\n#Exploratory Data Analysis\nfrom PIL import Image\nimg = Image.open(df['image'][0])\nplt.imshow(img);\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:28.872606Z\",\"iopub.execute_input\":\"2023-04-15T16:39:28.873311Z\",\"iopub.status.idle\":\"2023-04-15T16:39:29.108027Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:28.873273Z\",\"shell.execute_reply\":\"2023-04-15T16:39:29.107093Z\"}}\nsns.distplot(df['age'])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:30.122388Z\",\"iopub.execute_input\":\"2023-04-15T16:39:30.123353Z\",\"iopub.status.idle\":\"2023-04-15T16:39:30.316576Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:30.123303Z\",\"shell.execute_reply\":\"2023-04-15T16:39:30.315391Z\"}}\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(10, 5))\nax = sns.countplot(x='gender', data=df)\nax.set_xlabel('gender', fontsize=12)\nplt.xticks(rotation=45)\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:39:31.430399Z\",\"iopub.execute_input\":\"2023-04-15T16:39:31.431334Z\",\"iopub.status.idle\":\"2023-04-15T16:40:12.250823Z\",\"shell.execute_reply.started\":\"2023-04-15T16:39:31.431285Z\",\"shell.execute_reply\":\"2023-04-15T16:40:12.249899Z\"}}\n#To display grid of images\nplt.figure(figsize=(25, 25))\nfiles = df.iloc[0:25]\n\nfor index, file, age, gender in files.itertuples():\n    plt.subplot(5,5,index+1)\n    #img = load_img(file)\n    img = plt.imread(file)\n    img = np.array(img)\n    plt.imshow(img)\n    plt.title(f\"Age:{age} Gender:{gender_dict[gender]}\")\n    plt.axis('off')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:40:12.252788Z\",\"iopub.execute_input\":\"2023-04-15T16:40:12.258341Z\",\"iopub.status.idle\":\"2023-04-15T16:40:12.419608Z\",\"shell.execute_reply.started\":\"2023-04-15T16:40:12.258303Z\",\"shell.execute_reply\":\"2023-04-15T16:40:12.418377Z\"}}\nimport cv2\n#Feature Extraction\ndef extract_features(images):\n    features = []\n    for image in tqdm(images):\n       # img = plt.imread(image, grayscale=True)\n        img = cv2.imread(image, cv2.IMREAD_GRAYSCALE)\n        img = img.resize((128,128), Image.ANTIALIAS)\n        img = np.array(img)\n        features.append(img)\n        \n    features = np.array(features)\n    features = features.reshape(len(features), 128, 128, 1)\n    return features\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:40:12.425090Z\",\"iopub.execute_input\":\"2023-04-15T16:40:12.425551Z\",\"iopub.status.idle\":\"2023-04-15T16:40:12.436964Z\",\"shell.execute_reply.started\":\"2023-04-15T16:40:12.425513Z\",\"shell.execute_reply\":\"2023-04-15T16:40:12.435892Z\"}}\nimport cv2\n\ndef extract_features(images):\n    features = []\n    for image in tqdm(images):\n        img = cv2.imread(image, cv2.IMREAD_GRAYSCALE)\n        img = cv2.resize(img, (128, 128), interpolation=cv2.INTER_AREA)\n        img = np.array(img)\n        features.append(img)\n    features = np.array(features)\n    features = features.reshape(len(features), 128, 128, 1)\n    return features\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:40:29.601547Z\",\"iopub.execute_input\":\"2023-04-15T16:40:29.602148Z\",\"iopub.status.idle\":\"2023-04-15T16:40:32.346571Z\",\"shell.execute_reply.started\":\"2023-04-15T16:40:29.602110Z\",\"shell.execute_reply\":\"2023-04-15T16:40:32.345535Z\"}}\nX = extract_features(df['image'])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:40:33.958337Z\",\"iopub.execute_input\":\"2023-04-15T16:40:33.958738Z\",\"iopub.status.idle\":\"2023-04-15T16:40:33.967079Z\",\"shell.execute_reply.started\":\"2023-04-15T16:40:33.958703Z\",\"shell.execute_reply\":\"2023-04-15T16:40:33.965901Z\"}}\nX.shape\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:40:35.395291Z\",\"iopub.execute_input\":\"2023-04-15T16:40:35.396275Z\",\"iopub.status.idle\":\"2023-04-15T16:40:35.402931Z\",\"shell.execute_reply.started\":\"2023-04-15T16:40:35.396226Z\",\"shell.execute_reply\":\"2023-04-15T16:40:35.401886Z\"}}\nX = X/255.0\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:40:38.480624Z\",\"iopub.execute_input\":\"2023-04-15T16:40:38.481028Z\",\"iopub.status.idle\":\"2023-04-15T16:40:38.486656Z\",\"shell.execute_reply.started\":\"2023-04-15T16:40:38.480992Z\",\"shell.execute_reply\":\"2023-04-15T16:40:38.485328Z\"}}\ny_gender = np.array(df['gender'])\ny_age = np.array(df['age'])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:41:28.002652Z\",\"iopub.execute_input\":\"2023-04-15T16:41:28.003052Z\",\"iopub.status.idle\":\"2023-04-15T16:41:28.008521Z\",\"shell.execute_reply.started\":\"2023-04-15T16:41:28.003017Z\",\"shell.execute_reply\":\"2023-04-15T16:41:28.006997Z\"}}\ninput_shape = (128,128,1)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:41:37.169755Z\",\"iopub.execute_input\":\"2023-04-15T16:41:37.170859Z\",\"iopub.status.idle\":\"2023-04-15T16:41:39.648684Z\",\"shell.execute_reply.started\":\"2023-04-15T16:41:37.170795Z\",\"shell.execute_reply\":\"2023-04-15T16:41:39.647561Z\"}}\ninputs = Input((input_shape))\n# convolutional layers\n#conv_0 = Conv2D(16, kernel_size=(3, 3), activation='relu') (inputs)\n#maxp_0 = MaxPooling2D(pool_size=(2, 2)) (conv_0)\n\nconv_1 = Conv2D(32, kernel_size=(3, 3), activation='relu') (inputs)\nmaxp_1 = MaxPooling2D(pool_size=(2, 2)) (conv_1)\n\nconv_2 = Conv2D(64, kernel_size=(3, 3), activation='relu') (maxp_1)\nmaxp_2 = MaxPooling2D(pool_size=(2, 2)) (conv_2)\n\nconv_3 = Conv2D(128, kernel_size=(3, 3), activation='relu') (maxp_2)\nmaxp_3 = MaxPooling2D(pool_size=(2, 2)) (conv_3)\n\nconv_4 = Conv2D(256, kernel_size=(3, 3), activation='relu') (maxp_3)\nmaxp_4 = MaxPooling2D(pool_size=(2, 2)) (conv_4)\n\nflatten = Flatten() (maxp_4)\n\n# fully connected layers\ndense_1 = Dense(256, activation='relu') (flatten)\ndense_2 = Dense(256, activation='relu') (flatten)\n\ndropout_1 = Dropout(0.3) (dense_1)\ndropout_2 = Dropout(0.3) (dense_2)\n\noutput_1 = Dense(1, activation='sigmoid', name='gender_out') (dropout_1)\noutput_2 = Dense(1, activation='relu', name='age_out') (dropout_2)\n\nmodel = Model(inputs=[inputs], outputs=[output_1, output_2])\n\nmodel.compile(loss=['binary_crossentropy', 'mae'], optimizer='adam', metrics=['accuracy'])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:41:55.193474Z\",\"iopub.execute_input\":\"2023-04-15T16:41:55.194439Z\",\"iopub.status.idle\":\"2023-04-15T16:41:55.231418Z\",\"shell.execute_reply.started\":\"2023-04-15T16:41:55.194399Z\",\"shell.execute_reply\":\"2023-04-15T16:41:55.230609Z\"}}\nmodel.summary()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:41:56.803421Z\",\"iopub.execute_input\":\"2023-04-15T16:41:56.804003Z\",\"iopub.status.idle\":\"2023-04-15T16:41:57.045093Z\",\"shell.execute_reply.started\":\"2023-04-15T16:41:56.803963Z\",\"shell.execute_reply\":\"2023-04-15T16:41:57.043882Z\"}}\n#Plotting model\nfrom tensorflow.keras.utils import plot_model\nplot_model(model)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:41:58.646844Z\",\"iopub.execute_input\":\"2023-04-15T16:41:58.648145Z\",\"iopub.status.idle\":\"2023-04-15T16:42:09.689345Z\",\"shell.execute_reply.started\":\"2023-04-15T16:41:58.648094Z\",\"shell.execute_reply\":\"2023-04-15T16:42:09.688367Z\"}}\n# train model\nhistory = model.fit(x=X, y=[y_gender, y_age], batch_size=32, epochs=42, validation_split=0.2)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:42:14.202748Z\",\"iopub.execute_input\":\"2023-04-15T16:42:14.203531Z\",\"iopub.status.idle\":\"2023-04-15T16:42:14.693957Z\",\"shell.execute_reply.started\":\"2023-04-15T16:42:14.203490Z\",\"shell.execute_reply\":\"2023-04-15T16:42:14.692803Z\"}}\n# plot results for gender\nacc = history.history['gender_out_accuracy']\nval_acc = history.history['val_gender_out_accuracy']\nepochs = range(len(acc))\n\nplt.plot(epochs, acc, 'b', label='Training Accuracy')\nplt.plot(epochs, val_acc, 'r', label='Validation Accuracy')\nplt.title('Accuracy Graph')\nplt.legend()\nplt.figure()\n\nloss = history.history['gender_out_loss']\nval_loss = history.history['val_gender_out_loss']\n\nplt.plot(epochs, loss, 'b', label='Training Loss')\nplt.plot(epochs, val_loss, 'r', label='Validation Loss')\nplt.title('Loss Graph')\nplt.legend()\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:42:16.312579Z\",\"iopub.execute_input\":\"2023-04-15T16:42:16.313317Z\",\"iopub.status.idle\":\"2023-04-15T16:42:16.561860Z\",\"shell.execute_reply.started\":\"2023-04-15T16:42:16.313265Z\",\"shell.execute_reply\":\"2023-04-15T16:42:16.560742Z\"}}\n# plot results for age\nloss = history.history['age_out_loss']\nval_loss = history.history['val_age_out_loss']\nepochs = range(len(loss))\n\nplt.plot(epochs, loss, 'b', label='Training Loss')\nplt.plot(epochs, val_loss, 'r', label='Validation Loss')\nplt.title('Loss Graph')\nplt.legend()\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-04-15T16:42:34.961696Z\",\"iopub.execute_input\":\"2023-04-15T16:42:34.962651Z\",\"iopub.status.idle\":\"2023-04-15T16:42:35.253671Z\",\"shell.execute_reply.started\":\"2023-04-15T16:42:34.962601Z\",\"shell.execute_reply\":\"2023-04-15T16:42:35.252682Z\"}}\n#prediction with test data\nimage_index = 7\nprint(\"Original Gender:\", gender_dict[y_gender[image_index]], \"Original Age:\", y_age[image_index])\n# predict from model\npred = model.predict(X[image_index].reshape(1, 128, 128, 1))\npred_gender = gender_dict[round(pred[0][0][0])]\npred_age = round(pred[1][0][0])\nprint(\"Predicted Gender:\", pred_gender, \"Predicted Age:\", pred_age)\nplt.axis('off')\nplt.imshow(X[image_index].reshape(128, 128), cmap='gray');","metadata":{"_uuid":"de5024b7-f1be-491f-a11c-191f891a2ef3","_cell_guid":"4c4f0bc2-7e3a-42da-9aa2-65a4064b665e","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}